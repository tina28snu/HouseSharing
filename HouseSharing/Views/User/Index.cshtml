@model HouseSharing.Models.User

@{
    ViewBag.Title = "Index";
}

<h2>Account</h2>


        <hr />
<table id="userForm">
    <tr>
        <td><h4>Log In</h4></td>
        <td rowspan="2" class="orBetween"><h4>Or</h4></td>
        <td><h4>Create an account</h4></td>
    </tr>
    <tr>
        <td class="loginOrConnect">
            @using (Html.BeginForm("Connect", "User"))
            {
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.AntiForgeryToken()
                <div class="form-group">
                    @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2 formLabel" })
                    <div class="col-md-10 inputForm">
                        @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control spatiu" } })
                        @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2 formLabel" })
                    <div class="col-md-10 inputForm">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control spatiu", type = "password" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit" class="btn btn-default inputSubmit" />
                    </div>
                </div>
            }
        </td>
        <td class="loginOrConnect">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, "Last Name", htmlAttributes: new { @class = "control-label col-md-2 formLabel" })
                    <div class="col-md-10 inputForm">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, "First Name", htmlAttributes: new { @class = "control-label col-md-2 formLabel" })
                    <div class="col-md-10 inputForm">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Telephone, htmlAttributes: new { @class = "control-label col-md-2 formLabel" })
                    <div class="col-md-10 inputForm">
                        @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2 formLabel" })
                    <div class="col-md-10 inputForm">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Adresse, htmlAttributes: new { @class = "control-label col-md-2 formLabel" })
                    <div class="col-md-10 inputForm">
                        @Html.EditorFor(model => model.Adresse, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Adresse, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.City, "City", htmlAttributes: new { @class = "control-label col-md-2 formLabel" })
                    <div class="col-md-10 inputForm">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ZipCode, "Zip Code", htmlAttributes: new { @class = "control-label col-md-2 formLabel" })
                    <div class="col-md-10 inputForm">
                        @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Country.Name, "Country", htmlAttributes: new { @class = "control-label col-md-2 formLabel" })
                    <div class="col-md-10 inputForm">
                        <select name="CountryID" class="form-control">
                            @foreach (var item in Model.Countries)
                            {
                                <option value="@item.ID">@item.Name</option>
                            }
                        </select>
                        @*@Html.DropDownList("Country.Name", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Country.Name, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2 formLabel" })
                    <div class="col-md-10 inputForm">
                        @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2 formLabel" })
                    <div class="col-md-10 inputForm">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default inputSubmit" />
                    </div>
                </div>
            }
        </td>
    </tr>
</table>

<div><br /></div>
<div class="alert alert-danger alertConnectOrLogin">@ViewBag.ErrMsg</div>

